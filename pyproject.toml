[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "treestamps"
version = "0.3.3"
description = "Create timestamp records for recursive operations on directory trees."
authors = ["AJ Slater <aj@slater.net>"]
license = "GPL-3.0-only"
readme = "README.md"
homepage = "https://github.com/ajslater/treestamps"
documentation = "https://github.com/ajslater/treestamps"
keywords = ["timestamps", "library", "recursive", "directory"]
classifiers = [
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{ include = "treestamps.py" }, { include = "tests", format = "sdist" }]
include = ["NEWS.md"]

[tool.poetry.dependencies]
python = "^3.9"
"ruamel.yaml" = "^0.17.21"
termcolor = "^2.0.1"
bandit = "^1.7.4"
flake8-eradicate = "^1.4.0"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.4"
codespell = "^2.1.0"
coverage = { extras = ["toml"], version = "^7.0" }
flake8-black = "^0.3.2"
flake8-bugbear = "^22.1"
flake8-docstrings = "^1.5.0"
flake8-eradicate = "^1.4.0"
isort = "^5.10.1"
neovim = "^0.3.1"
pep8-naming = "^0.13.2"
pip-review = "^1.1.0"
pyright = "^1.1.237"
pytest = "^7.0.0"
pytest-cov = "^4.0"
pytest-gitignore = "^1.3"
radon = "^5.1"
tomli = "^2.0.1"
vulture = "^2.1"

[tool.poetry.urls]
"Source" = "https://github.com/ajslater/treestamps"
"Issues" = "https://github.com/ajslater/treestamps/issues"

[tool.bandit]
exclude = [
  ".venv",
  "node_modules",
  "**/__pycache__",
]

[tool.black]
exclude = "/(.git|.mypy_cache|.pytest_cache|.venv|__pycache__|dist|node_modules|test-results|typings)/"

[tool.codespell]
skip=".git,.mypy_cache,.pytest_cache,.venv,*~,./dist,./node_modules,./package-lock.json,./poetry.lock,./test-results"
builtin="clear,rare,code"
check-hidden=true
ignore-words-list="thead"

[tool.coverage.run]
source = ["treestamps"]
branch = true
concurrency = ["multiprocessing"]
omit = [
  ".git/*",
  ".mypy_cache/*",
  ".pytest_cache/*",
  ".venv/*",
  "*__pycache__*",
  "dist/*",
  "node_modules/*",
  "test-results/*",
  "typings/*"
]

[tool.coverage.html]
directory = "test-results/coverage"

[tool.isort]
profile="black"
atomic=true
lines_after_imports=2
lines_between_types=1
multi_line_output=3
skip=".git,.mypy_cache,.pytest_cache,.venv,__pycache__,dist,node_modules,test-results,typings"
color_output=true


[tool.pytest.ini_options]
junit_family = "xunit2"
addopts = """
  --junitxml=test-results/pytest/junit.xml
  -ra
  --strict-markers
  --cov
  --cov-append
  --cov-report=html
  --cov-report=term
  --ignore=.git
  --ignore=.mypy_cache
  --ignore=.pytest_cache
  --ignore=.venv
  --ignore=dist
  --ignore=node_modules
  --ignore=test-results
  --ignore=typings
  --ignore=vulture_whitelist.py
  --ignore-glob=*__pycache__*
"""

[tool.vulture]
exclude = [".git/", ".mypy_cache/", ".pytest_cache", ".venv", "*__pycache__*"]
min_confidence = 61
sort_by_size = true

[tool.pyright]
exclude = [
  "**/__pycache__",
  "**/node_modules",
  ".git",
  ".mypy_cache",
  ".pytest_cache",
  ".venv",
  "dist",
  "package-lock.json",
  "poetry.lock",
  "test-results",
  "typings",
  "vulture_whitelist.py"
]
useLibraryCodeForTypes = true
reportMissingImports = true
reportImportCycles = true
